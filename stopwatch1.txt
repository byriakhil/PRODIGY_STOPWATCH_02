<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stop Watch</title>
    <style>
        * {
            margin: 0;
            padding: 0;
        }
        .stopwatch {
            font-size: 40px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 0px;
        }
        .main-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        .sub-container {
            background-color: yellow;
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: center;
            padding: 40px;
            border-radius: 25px;
            border: 1px solid black;
        }
        .watch {
            border: 1px solid black;
            background-color: lightgray;
            width: 200px;
            font-size: 50px;
            padding: 1px 15px;
            margin-bottom: 20px;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: auto;
        }
        #stopwatch {
            padding: 0px;
            margin-bottom: 0px;
            border: 0px
        }
        .buttons {
            display: grid;
            grid-gap: 30px;
            grid-template-columns: auto auto auto auto;
        }
        .buttons [type=button] {
            padding: 4px;
            border-radius: 3px;
            border: 1px solid black;
        }
        ul {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
            flex-direction: column;
        }
        ul li {
            padding: 5px;
            list-style: none;
        }

        .visible{
            visibility: hidden;
        }

 

    </style>
</head>
<body>
    <h1 class="stopwatch">STOPWATCH</h1>
    <div class="main-container">
        <div class="sub-container">
            <div class="watch">
                <div class="watch" id="stopwatch">
                    <div id="minute">00</div>
                    <div id="colon">:</div>
                    <div id="watch">00</div>
                    <div id="colon">:</div>
                    <div id="watchtoo">00</div>

                </div>
            </div>
            <div class="buttons">
                <button type="button" id="start">START</button>
                <button type="button" id="stop">STOP</button>
                <button type="button" id="reset">RESET</button>
                <button type="button" id="laps">LAPS</button>
            </div>
        </div>
    </div>
    <ul id="renderlaps"><b>Laps</b></ul>


    <script>
        class Watch {
            constructor() {
                this.startcheck = true;
                this.stopcheck = true;
                this.i = 0;
                this.j = 0;
                this.m = 0;
                this.c = 0;
                this.click();
            }
            click() {
                this.watch = document.getElementById("watch");
                this.watchtoo = document.getElementById("watchtoo");
                this.minute = document.getElementById("minute");
                const start = document.getElementById("start");
                const stop = document.getElementById("stop");
                const reset = document.getElementById("reset");
                const laps = document.getElementById("laps");

                start.addEventListener('click', () => {
                    if (this.startcheck == true) {
                        this.startId = setInterval(() => { this.startProcess() }, 10);
                    }
                });
                stop.addEventListener('click', () => {
                    if (this.stopcheck == true) {
                        this.stopProcess()
                    }
                });
                reset.addEventListener('click', () => { this.resetProcess() });
                laps.addEventListener('click', () => { this.lapsProcess() });
                
            }
            startProcess() {
                if (this.i < 99) {
                this.i = this.i + 1;
                if (this.i < 10) {
                    this.watchtoo.textContent = `0${this.i}`;
                } else {
                    this.watchtoo.textContent = this.i;
                }} else {
                    this.i = 0;
                    this.j = this.j + 1;
                    if (this.j < 10) {
                        this.watch.textContent = `0${this.j}`;
                    } else {
                        if (this.j < 60) {
                        this.watch.textContent = this.j;
                    } else {
                        this.j = 0;
                        this.m = this.m + 1;
                    if (this.m < 10) {
                        this.minute.textContent = `0${this.m}`;
                    } else {
                        this.minute.textContent = this.m;
                    }
                        this.watch.textContent = `0${this.j}`
                    }
                }
            }
            if (this.stopcheck == false) {
                clearInterval(this.blink);
                this.stopwatch.classList.remove("visible");
                this.stopcheck = true;
                }
                this.startcheck = false;
            }
            stopProcess() {
            clearInterval(this.startId);
            this.startcheck = true;
            this.stopwatch = document.getElementById("stopwatch");
            this.blink = setInterval(() => {
            this.stopwatch.classList.toggle("visible");
            }, 300);
            this.stopcheck = false;
            }

            resetProcess() {
            this.i = 0;
            this.m = 0;
            this.j = 0;
            this.c = 0;
            const li = document.querySelectorAll("li");
            for (const lis of li) {
            lis.parentElement.removeChild(lis);
            }
            clearInterval(this.startId);
            clearInterval(this.blink);
            this.stopwatch.classList.remove("visible");
            this.watch.textContent = "00";
            this.watchtoo.textContent = "00";
            this.minute.textContent = "00";
            this.startcheck = true;
            this.stopcheck = true;
            }

            lapsProcess() {
            if (this.i > 0 || this.j > 0 || this.m > 0) {
            this.c = this.c + 1;
            const ul = document.getElementById("renderlaps");
            const li = document.createElement("li");
            li.textContent = `${this.c}. ${this.minute.textContent} Minutes, ${this.watch.textContent} Seconds, ${this.watchtoo.textContent} Miliseconds.`;;
            ul.append(li);
            }
        }

    }
    class App {
        static work() {
            new Watch();
        }
    }
    App.work();
    </script>
</body>
</html>